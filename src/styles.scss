// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$mat-select-autocomplete-primary: mat.define-palette(mat.$indigo-palette);
$mat-select-autocomplete-accent: mat.define-palette(
  mat.$pink-palette,
  A200,
  A100,
  A400
);

// The warn palette is optional (defaults to red).
$mat-select-autocomplete-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$mat-select-autocomplete-theme: mat.define-light-theme(
  (
    color: (
      primary: $mat-select-autocomplete-primary,
      accent: $mat-select-autocomplete-accent,
      warn: $mat-select-autocomplete-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($mat-select-autocomplete-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
.mat-search-panel {
  overflow: unset !important;
}

.mat-search-header {
  display: flex;
  text-align: center;
  gap: 0.2rem;
  margin: 0px 5px;

  & mat-form-field {
    flex-grow: 1;
  }
}
.mat-search-options {
  overflow: auto;
  max-height: 11rem;
}
